%include "./sys"

const stdin  0 end
const stdout 1 end
const stderr 2 end

const EOF -1 end

proc nth-argv :: int -> ptr do
  if dup 0 lt do
    drop c""
  elif dup get-argc gteq do
    drop c""
  else
    sizeof(ptr) mul
    get-argv swap ptr+
    read64 cast(ptr)
  end
end

memory _putch_buf 1 end
/// Writes a character to the standard output
inline proc putch :: int do
  _putch_buf write8
  1 _putch_buf puts
end

/// Writes an unsigned integer to stdout without a newline
proc putu :: int do
  if dup 0 eq do
    "0" puts drop
  else
    memory buffer 32 end

    32 while over 0 gt do
      1 sub swap
      10 divmod '0' add
      under buffer swap ptr+
      write8
      swap
    end

    32 over sub
    buffer under ptr+
    puts
    drop drop
  end
end

/// Writes a signed integer to stdout without a newline
inline proc puti :: int do
  if dup 0 lt do
    "-" puts
    not 1 add putu
  else putu end
end

/// Write the string to a FD
inline proc fputs :: int ptr int do write drop end

/// Write the string to the stderr
inline proc eputs :: int ptr do stderr fputs end
