%include "./sys"

const stdin  0 end
const stdout 1 end
const stderr 2 end

memory _putch_buf 1 end
/// Writes a character to the standard output
inline proc putch :: int do
  _putch_buf write8
  1 _putch_buf puts
end

// TODO: Local memory regions
memory _putu_buf 32 end

/// Writes an unsigned integer to stdout without a newline
proc putu :: int do
  if dup 0 eq do
    "0" puts drop
  else
    31 swap while dup 0 gt do
      10 divmod '0' add
      rot _putu_buf over ptr+
      rot swap write8
      1 sub swap
    end
    drop
    _putu_buf over ptr+
    swap 32 swap sub
    swap puts

    // TODO: Local memory regions
    0 while dup 32 lt do
      0 over _putu_buf swap ptr+ write64
      7 add // TODO: weird ass bug
    end drop
  end
end

/// Writes a signed integer to stdout without a newline
proc puti :: int do
  if dup 0 lt do
    "-" puts
    not 1 add putu
  else putu end
end

/// Writes the string to the stderr
inline proc eputs :: int ptr do
  stderr write drop
end
